name: Release

on:
  push:
    tags:
      - v*

concurrency:
  group: release-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  dockerhub:
    name: DockerHub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Write release version
        id: version
        run: |
          VERSION=${{ github.head_ref || github.ref_name }}
          # strip v
          echo Version: ${VERSION#v}
          echo "VERSION=${VERSION#v}" >> "$GITHUB_OUTPUT"

      - name: Check helm versions
        run: |
          grep -qF '${{ steps.version.outputs.VERSION }}' cedana-helm/Chart.yaml || (echo "update the version field in cedana-helm/Chart.yaml"; exit 1)

      - name: Lint helm chart
        run: |
          helm lint cedana-helm

      - name: Push helm chart
        uses: appany/helm-oci-chart-releaser@v0.4.2
        with:
          name: cedana-helm
          repository: cedana
          tag: ${{ steps.version.outputs.VERSION }}
          registry: registry.hub.docker.com
          path: cedana-helm
          registry_username: ${{ vars.DOCKER_USERNAME }}
          registry_password: ${{ secrets.DOCKER_TOKEN }}

  github:
    name: GitHub
    needs: dockerhub
    runs-on: ubuntu-latest
    steps:
      - uses: runs-on/action@v1

      - name: Create release
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.head_ref || github.ref_name }}
        run: |
          gh release create "$tag" \
              --repo="$GITHUB_REPOSITORY" \
              --title="$tag" \
              --generate-notes

  post-summary:
    name: Post Summary
    runs-on: ubuntu-latest
    needs: ["github", "dockerhub"]
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          fetch-tags: true

      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::$(git tag --sort=-creatordate | sed -n '1p')

      - name: Get previous tag
        id: previous-tag
        run: |
          echo ::set-output name=tag::$(git tag --sort=-creatordate | sed -n '2p')

      - name: Get release info
        id: release-info
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          token: ${{ github.token }}
          excludes: draft
          repository: ${{ github.repository }}

      - name: Generate summary
        id: summary
        env:
          RELEASE_TITLE: "cedana-helm-charts"
          RELEASE_DESCRIPTION: "**${{ steps.tag.outputs.tag }}**"
          RELEASE_NOTES_URL: https://github.com/${{ github.repository }}/releases/${{ steps.tag.outputs.tag }}
          RELEASE_BODY: "${{ steps.release-info.outputs.description }}"
          TAG: ${{ steps.tag.outputs.tag }}
          PREVIOUS_TAG: ${{ steps.previous-tag.outputs.tag }}
        run: |
          echo $RELEASE_BODY > $GITHUB_STEP_SUMMARY
          echo ::set-output name=slack-summary::$(scripts/ci/release-summary-slack)

      - name: Post summary
        id: slack-patch
        uses: slackapi/slack-github-action@v1.26.0
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_RELEASE }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        with:
          payload: |
            ${{ steps.summary.outputs.slack-summary }}
