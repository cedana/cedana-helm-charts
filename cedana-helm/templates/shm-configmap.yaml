{{- if .Values.shmConfig.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cedana-helm.fullname" . }}-shm-config
  labels:
    app.kubernetes.io/component: shm-config
    app.kubernetes.io/created-by: cedana-helm
    app.kubernetes.io/part-of: cedana-helm
    {{- include "cedana-helm.labels" . | nindent 4 }}
data:
  shm-size: {{ .Values.shmConfig.size | quote }}
  min-bytes: {{ .Values.shmConfig.minBytes | quote }}
  configure-shm.sh: |
    #!/bin/bash
    set -euo pipefail
    
    # Configure /dev/shm size
    # This script increases the shared memory size on the host node
    
    SHM_PATH="/host/dev/shm"
    FSTAB="/host/etc/fstab"
    SIZE_G="{{ .Values.shmConfig.size }}"
    MIN_BYTES="{{ .Values.shmConfig.minBytes }}"
    
    echo "Configuring /dev/shm with size $SIZE_G..."
    
    # 1. Remount if current size is too small
    if [ "$(df --output=size -B 1 "$SHM_PATH" | tail -n 1)" -lt "$MIN_BYTES" ]; then
        echo "Remounting $SHM_PATH with size $SIZE_G..."
        mount -o remount,size=$SIZE_G "$SHM_PATH"
    else
        echo "$SHM_PATH already has sufficient size"
    fi
    
    # 2. Ensure fstab is correct for persistence
    FSTAB_ENTRY="tmpfs /dev/shm tmpfs defaults,size=$SIZE_G 0 0"
    if [ -f "$FSTAB" ] && grep -qE "^\s*[^#]\s*tmpfs\s+/dev/shm" "$FSTAB"; then
        echo "Updating existing fstab entry for /dev/shm..."
        sed -i.bak -E "s|^\s*[^#]\s*tmpfs\s+/dev/shm.*|$FSTAB_ENTRY|" "$FSTAB"
    elif [ -f "$FSTAB" ]; then
        echo "Adding new fstab entry for /dev/shm..."
        echo "$FSTAB_ENTRY" >> "$FSTAB"
    fi
    
    echo "/dev/shm configuration complete."
{{- end }} 