---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "cedana-helm.fullname" . }}-helper
  labels:
    app.kubernetes.io/component: helper
    app.kubernetes.io/created-by: cedana-helm
    app.kubernetes.io/part-of: cedana-helm
    {{- include "cedana-helm.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.daemonHelper.updateStrategy.maxSurge }}
      maxUnavailable: {{ .Values.daemonHelper.updateStrategy.maxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/component: helper
      {{- include "cedana-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: binary-app
        app.kubernetes.io/component: helper
        {{- include "cedana-helm.selectorLabels" . | nindent 8 }}
    spec:
      hostPID: true
      hostNetwork: true
      hostIPC: true
      containers:
        - name: binary-container
          image: {{ .Values.daemonHelper.image.repository }}:{{ .Values.daemonHelper.image.tag }}
          imagePullPolicy: {{ .Values.daemonHelper.image.imagePullPolicy }}
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: host-volume
              mountPath: /host
              readOnly: false
          command: ["/bin/sh", "-c"]
          {{ if .Values.daemonHelper.upgradeAndRestart }}
          args: ["cedana k8s-helper --restart true && sleep infinity"]
          {{ else }}
          args: ["cedana k8s-helper --setup-host true && sleep infinity"]
          {{ end }}
          ports:
            - name: grpc
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            grpc:
              port: 8080
            periodSeconds: 20
          startupProbe:
            grpc:
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 2
          readinessProbe:
            grpc:
              port: 8080
            periodSeconds: 20
          env:
            - name: SIGNOZ_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: cedana-secrets
                  key: signoz-api-key
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
