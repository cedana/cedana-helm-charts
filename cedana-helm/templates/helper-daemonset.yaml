---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "cedana-helm.fullname" . }}-helper
  labels:
    app.kubernetes.io/component: helper
    app.kubernetes.io/created-by: cedana-helm
    app.kubernetes.io/part-of: cedana-helm
    {{- include "cedana-helm.labels" . | nindent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.daemonHelper.updateStrategy.maxSurge }}
      maxUnavailable: {{ .Values.daemonHelper.updateStrategy.maxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/component: helper
      {{- include "cedana-helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: helper
        {{- include "cedana-helm.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include "cedana-helm.helper.config.checksum" . | sha256sum }}
    spec:
      hostPID: true
      hostIPC: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.daemonHelper.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.daemonHelper.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.daemonHelper.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: helper
          {{- if .Values.daemonHelper.image.digest }}
          image: {{ .Values.daemonHelper.image.repository }}@{{ .Values.daemonHelper.image.digest }}
          {{- else }}
          image: {{ .Values.daemonHelper.image.repository }}:{{ .Values.daemonHelper.image.tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.daemonHelper.image.imagePullPolicy }}
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: host-volume
              mountPath: /host
              readOnly: false
          command: ["/bin/sh", "-c"]
          {{- if .Values.daemonHelper.forceCleanup }}
          args: ["cedana k8s destroy && cedana k8s setup"]
          {{- else }}
          args: ["cedana k8s setup"]
          {{- end }}
          ports:
            - name: grpc
              containerPort: 8080
              protocol: TCP
          startupProbe:
            grpc:
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            failureThreshold: 12
            successThreshold: 1
            timeoutSeconds: 5
          readinessProbe:
            grpc:
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            failureThreshold: 1
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            grpc:
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 10
            failureThreshold: 6
            successThreshold: 1
            timeoutSeconds: 5
          env:
            - name: CEDANA_CLUSTER_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: cluster-id
            - name: CEDANA_AUTH_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "cedana-helm.secretName" . }}
                  key: auth-token
            - name: CEDANA_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: url
            - name: CEDANA_ADDRESS
              valueFrom: 
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: address
            - name: CEDANA_PROTOCOL
              valueFrom: 
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: protocol
            - name: CEDANA_CHECKPOINT_DIR
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: checkpoint-dir
            - name: CEDANA_CHECKPOINT_STREAMS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: checkpoint-streams
            - name: CEDANA_CHECKPOINT_COMPRESSION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: checkpoint-compression
            - name: CEDANA_GPU_POOL_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: gpu-pool-size
            - name: CEDANA_GPU_FREEZE_TYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: gpu-freeze-type
            - name: CEDANA_GPU_SHM_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: gpu-shm-size
            - name: CEDANA_GPU_LD_LIB_PATH
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: gpu-ld-lib-path
            - name: CEDANA_PLUGINS_BUILDS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: plugins-builds
            - name: CEDANA_PLUGINS_NATIVE_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: plugins-native-version
            - name: CEDANA_PLUGINS_CRIU_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: plugins-criu-version
            - name: CEDANA_PLUGINS_CONTAINERD_RUNTIME_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: plugins-containerd-runtime-version
            - name: CEDANA_PLUGINS_GPU_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: plugins-gpu-version
            - name: CEDANA_PLUGINS_STREAMER_VERSION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: plugins-streamer-version
            - name: CEDANA_PROFILING_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: profiling
            - name: CEDANA_METRICS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: metrics
            - name: CEDANA_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: log-level
            - name: CEDANA_LOG_LEVEL_NO_SERVER
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: log-level
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ template "cedana-helm.secretName" . }}
                  key: aws-secret-access-key
            - name: CONTAINERD_ADDRESS
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: containerd-address
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: aws-region
            - name: AWS_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: aws-endpoint
            - name: SHM_CONFIG_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: shm-config-enabled
            - name: SHM_CONFIG_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: shm-config-size
            - name: SHM_CONFIG_MIN_SIZE
              valueFrom:
                configMapKeyRef:
                  name: {{ template "cedana-helm.configMapName" . }}
                  key: shm-config-min-size
      volumes:
        - name: varlog
          hostPath:
            path: /var/log
        - name: host-volume
          hostPath:
            path: /
